1. slice() :-
slice() extracts a part of the string based on the given stating-index and ending-index and returns a new string.
// Define a string variable 
let A = 'Mohini is coder';

// Use the slice() method to extract a substring
let b = A.slice(0, 6);
let c = A.slice(7, 9);
let d = A.slice(10);

// Output the value of variable
console.log(b);
console.log(c);
console.log(d);

output:-
Mohini 
is
coder

2. substring() :-
substring() returns the part of the given string from the start index to the end index. Indexing starts from zero (0).
// Define a string variable
let str = "Mind, Power, Soul";

// Use the substring() method to extract a substring 
let part = str.substring(6, 11);

// Output the value of variable
console.log(part);

output:-
Power

3. replace() :-
replace() replaces a part of the given string with another string or a regular expression. The original string will remain unchanged.
// Define a string variable 'str' 
let str = "Mind, Power, Soul";

// Use the replace() method to replace the substring
let part = str.replace("Power", "Space");

// Output the resulting string after replacement
console.log(part);

output:-
Mind, Space, Soul

4. replaceAll() :-
replaceAll() returns a new string after replacing all the matches of a string with a specified string or a regular expression. The original string is left unchanged after this operation.
// Define a string variable 'str'
let str = "Mind, Power, Power, Soul";

// Use the replaceAll() method to replace all occurrences
//of "Power" with "Space" in the string 'str'
let part = str.replaceAll("Power", "Space");

// Output the resulting string after replacement
console.log(part);

output:-
Mind, Space, Space, Soul

5.toUpperCase() :-
toUpperCase() converts all the characters present in the String to upper case and returns a new String with all characters in upper case. This method accepts single parameter stringVariable string that you want to convert in upper case.

let great = 'Mohini is Developer';
console.log(great.toUpperCase());

output:
Mohini is Developer 

6. toLowerCase() :-
toLowerCase() converts all the characters present in the so lowercase and returns a new string with all the characters in lowercase.

let great = 'MOHINI IS DEVELOPER';
console.log(great.toLowerCase());

output:-
mohini is developer

7. concat()
concat() combines the text of two strings and returns a new combined or joined string. To concatenate two strings, we use the concat() method on one object of string and send another object of string as a parameter. This method accepts one argument. The variable contains text in double quotes or single quotes.

let gfd = 'Mohini';
let great = 'is Frontend Developer';

console.log(gfd.concat(great));

output:-
Mohini is Frontend Developer 

8.trim() :-
trim() is used to remove either white spaces from the given string. This method returns a new string with removed white spaces. This method is called on a String object. This method doesn't accept any parameter.
let gfd = 'MS  ';
let newgf = gfd.trim();
console.log(gfd.length);
console.log(newgf.length);

output:-
4
2

9. trimStart() :-
trimStart() removes whitespace from the beginning of a string. The value of the string is not modified in any manner, including any whitespace present after the string.
let gfd = '  MS';
console.log(gfd);
let newgf = gfd.trimStart();
console.log(newgf);

output:-
  MS
MS

10. trimEnd() :-
trimEnd() removes white space from the end of a string. The value of the string is not modified in any manner, including any white-space present before the string.
let gfd = 'MS  ';
console.log(gfd);
let newgf = gfd.trimStart();
console.log(newgf);

output:-
MS
MS

11. split() :-
split() splits the string into an array of sub-strings. This method returns an array. This method accepts a single parameter character on which you want to split the string.
let gfd ='Mohini-is-developer';
console.log(gfd.split('-'));

output:-
['Mohini','is','Developer']

12. padStart() :-
padStart() pad a string with another string until it reaches the given length. The padding is applied from the left end of the string.
let stone = "Soul";
stone = stone.padStart(9, "Mind ");
console.log(stone);

output:-
Mind Soul

13. padEnd() :-
padEnd() pad a string with another string until it reaches the given length. The padding is applied from the right end of the string.
let stone = "Soul";
stone = stone.padEnd(10, " Power");
console.log(stone);

output:-
Soul Power

14. charAt() :-
charAt() returns the character at the specified index. String in JavaScript has zero-based indexing.
let gfd ='Mohini-is-developer';
console.log(gfd.charAt(0));

